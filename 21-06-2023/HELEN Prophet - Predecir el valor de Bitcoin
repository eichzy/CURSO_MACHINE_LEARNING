{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1M6E3wVljNlfpFfCR2eyuixtKQV8S5aLs","timestamp":1687335631715},{"file_id":"12i8cfF9yHdoJR7O6E3k6TKKtkGLXg4dX","timestamp":1666454984923},{"file_id":"15Mk88610WWyM2ozvKRdBB533KpPS6k8o","timestamp":1666002389372}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Prophet - Predecir el valor de Bitcoin\n"],"metadata":{"id":"ubiSxco4UrWt"}},{"cell_type":"markdown","source":["Prophet es una de las librerías más avanzadas para predecir series temporales desarrollada por Facebook. Te enseñaremos a como entrenar un modelo con Prophet, a optimizarlo y a utilizarlo para realizar predicciones futuras. En este ejercicio vamos a practicar a predecir el valor de Bitcoin, una criptomoneda. Es la criptomoneda que le ha marcado el camino a todas las demás que llegaron después utilizando su tecnología."],"metadata":{"id":"pBnYk8DnUrWt"}},{"cell_type":"markdown","source":["<hr/>\n","<div class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\">\n","[Tip]: Para ejecutar el código de Python en la celda de código a continuación, haz clic en la celda para seleccionarla y presiona <kbd>Shift</kbd> + <kbd>Enter</kbd>.\n","</div>\n","<hr/>\n"],"metadata":{"id":"LzoT6DcGUrWu"}},{"cell_type":"code","metadata":{"id":"qa7Zb4FOsuCr","executionInfo":{"status":"ok","timestamp":1687337046166,"user_tz":-120,"elapsed":9670,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}}},"source":["# Instalamos el modelo predictivo Prophet\n","!python -m pip install prophet --quiet\n","# De aquí vamos a descargar los datos\n","!pip install yfinance --quiet"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"lQFsG-Nvs2-L","executionInfo":{"status":"ok","timestamp":1687337046520,"user_tz":-120,"elapsed":357,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}}},"source":["#Importamos las dependencias\n","import pandas as pd\n","import yfinance as yf\n","from datetime import datetime\n","from datetime import timedelta\n","import plotly.graph_objects as go\n","from prophet import Prophet\n","from prophet.plot import plot_plotly, plot_components_plotly\n","import warnings\n","\n","warnings.filterwarnings('ignore')\n","\n","pd.options.display.float_format = '${:,.2f}'.format"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["<h3 id=\"version\">Cargar histórico de datos</h3>\n"],"metadata":{"id":"UNjD_ZJbUrWw"}},{"cell_type":"markdown","source":["<p>\n","    Para descargarnos la serie temporal de BTC lo vamos a hacer desde Yahoo Finance. En concreto vamos a descargar el histórico desde 2016 hasta la actualidad.\n","</p>\n","\n"],"metadata":{"id":"9FKqX2d3UrWx"}},{"cell_type":"code","metadata":{"id":"AScIXyIiiQID","colab":{"base_uri":"https://localhost:8080/","height":224},"executionInfo":{"status":"ok","timestamp":1687337046521,"user_tz":-120,"elapsed":10,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}},"outputId":"b636cdf2-9d2a-45b7-886e-085644e4426d"},"source":["# Fecha de inicio es un string 2016-01-01 y fecha de fin (hoy) en formato texto '%Y-%m-%d'\n","today = '2023-06-21'\n","start_date = '2016-01-01'\n","# Descargar el dataframe\n","btc_df = yf.download('BTC-USD',start_date, today).reset_index()\n","\n","btc_df.tail()"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["\r[*********************100%***********************]  1 of 1 completed\n"]},{"output_type":"execute_result","data":{"text/plain":["           Date       Open       High        Low      Close  Adj Close  \\\n","2723 2023-06-16 $25,575.28 $26,463.17 $25,245.36 $26,327.46 $26,327.46   \n","2724 2023-06-17 $26,328.68 $26,769.39 $26,174.49 $26,510.68 $26,510.68   \n","2725 2023-06-18 $26,510.46 $26,675.93 $26,325.89 $26,336.21 $26,336.21   \n","2726 2023-06-19 $26,335.44 $26,984.61 $26,312.83 $26,851.03 $26,851.03   \n","2727 2023-06-20 $26,841.66 $28,388.97 $26,668.79 $28,327.49 $28,327.49   \n","\n","           Volume  \n","2723  16324646965  \n","2724  11090276850  \n","2725   9565695129  \n","2726  12826986222  \n","2727  22211859147  "],"text/html":["\n","  <div id=\"df-354a9c95-4e95-40f3-9866-ef434db09994\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2723</th>\n","      <td>2023-06-16</td>\n","      <td>$25,575.28</td>\n","      <td>$26,463.17</td>\n","      <td>$25,245.36</td>\n","      <td>$26,327.46</td>\n","      <td>$26,327.46</td>\n","      <td>16324646965</td>\n","    </tr>\n","    <tr>\n","      <th>2724</th>\n","      <td>2023-06-17</td>\n","      <td>$26,328.68</td>\n","      <td>$26,769.39</td>\n","      <td>$26,174.49</td>\n","      <td>$26,510.68</td>\n","      <td>$26,510.68</td>\n","      <td>11090276850</td>\n","    </tr>\n","    <tr>\n","      <th>2725</th>\n","      <td>2023-06-18</td>\n","      <td>$26,510.46</td>\n","      <td>$26,675.93</td>\n","      <td>$26,325.89</td>\n","      <td>$26,336.21</td>\n","      <td>$26,336.21</td>\n","      <td>9565695129</td>\n","    </tr>\n","    <tr>\n","      <th>2726</th>\n","      <td>2023-06-19</td>\n","      <td>$26,335.44</td>\n","      <td>$26,984.61</td>\n","      <td>$26,312.83</td>\n","      <td>$26,851.03</td>\n","      <td>$26,851.03</td>\n","      <td>12826986222</td>\n","    </tr>\n","    <tr>\n","      <th>2727</th>\n","      <td>2023-06-20</td>\n","      <td>$26,841.66</td>\n","      <td>$28,388.97</td>\n","      <td>$26,668.79</td>\n","      <td>$28,327.49</td>\n","      <td>$28,327.49</td>\n","      <td>22211859147</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-354a9c95-4e95-40f3-9866-ef434db09994')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-354a9c95-4e95-40f3-9866-ef434db09994 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-354a9c95-4e95-40f3-9866-ef434db09994');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_940Bbrdtpme","executionInfo":{"status":"ok","timestamp":1687337143542,"user_tz":-120,"elapsed":538,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}},"outputId":"1c646cd1-34a8-4341-8aa7-dda23dc55ae7"},"source":["# Validamos que no hay datos vacíos\n","btc_df.isnull().sum()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         0\n","Open         0\n","High         0\n","Low          0\n","Close        0\n","Adj Close    0\n","Volume       0\n","dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"Ps2rgd2L3EDP","executionInfo":{"status":"ok","timestamp":1687336853284,"user_tz":-120,"elapsed":566,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}}},"source":["# TAREA: Filtramos el dataframe para quedarnos solo las columnas \"Date\" y \"Open\"\n","# Date será la fecha del valor y Open el valor del BTC en ese momento\n","df = btc_df [['Date', 'Open']]\n","\n","# Valores que espera el prophet\n","# Eje X: Indíce llamado ds\n","# Eje Y: Serie a predecir llamada y\n","# TAREA HECHA: Crear un diccionario con clave \"Date\" y valor \"ds\"\n","# Y otra clave \"Open\" y valor \"y\"\n","new_names = {\n","    \"Date\": \"ds\",\n","    \"Open\": \"y\",\n","}\n","\n","# TAREA: Utiliza el diccionario para renombrar las columnas de df\n","df = df.rename(columns=new_names)"],"execution_count":5,"outputs":[]},{"cell_type":"code","source":["#Ejecuta la siguiente línea, si lo has hecho bien hasta aquí no dará error\n","df['ds'] = df['ds'].dt.tz_localize(None)"],"metadata":{"id":"ERbuEBnPe90l","executionInfo":{"status":"ok","timestamp":1687336872997,"user_tz":-120,"elapsed":333,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rvOredaW3eaD","executionInfo":{"status":"ok","timestamp":1687336875367,"user_tz":-120,"elapsed":6,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}},"outputId":"b13c066f-0515-4569-efd0-7673a8c3eb59"},"source":["df.tail()"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             ds          y\n","2723 2023-06-16 $25,575.28\n","2724 2023-06-17 $26,328.68\n","2725 2023-06-18 $26,510.46\n","2726 2023-06-19 $26,335.44\n","2727 2023-06-20 $26,841.66"],"text/html":["\n","  <div id=\"df-5e6dae1a-5dd1-4b12-936f-889c7e6490a4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ds</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2723</th>\n","      <td>2023-06-16</td>\n","      <td>$25,575.28</td>\n","    </tr>\n","    <tr>\n","      <th>2724</th>\n","      <td>2023-06-17</td>\n","      <td>$26,328.68</td>\n","    </tr>\n","    <tr>\n","      <th>2725</th>\n","      <td>2023-06-18</td>\n","      <td>$26,510.46</td>\n","    </tr>\n","    <tr>\n","      <th>2726</th>\n","      <td>2023-06-19</td>\n","      <td>$26,335.44</td>\n","    </tr>\n","    <tr>\n","      <th>2727</th>\n","      <td>2023-06-20</td>\n","      <td>$26,841.66</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e6dae1a-5dd1-4b12-936f-889c7e6490a4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5e6dae1a-5dd1-4b12-936f-889c7e6490a4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5e6dae1a-5dd1-4b12-936f-889c7e6490a4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"60SPukrzjLlf"},"source":["# Crear la gráfica del precio de apertura\n","#Asigna a la variable x la columna ds\n","x = df[\"ds\"]\n","#Asigna a la variable y la columna y\n","y = df[\"y\"]\n","\n","fig = go.Figure()\n","\n","fig.add_trace(go.Scatter(x=x, y=y))\n","\n","# Le ponemos el título a la gráfica\n","titulo = \"BTC-UDS PREDICCIONES\"\n","fig.update_layout(\n","    title_text=titulo,\n",")\n","\n","fig.update_layout(\n","    xaxis=dict(\n","        rangeselector=dict(\n","            buttons=list(\n","                [\n","                    dict(count=1, label=\"1m\", step=\"month\", stepmode=\"backward\"),\n","                    dict(count=6, label=\"6m\", step=\"month\", stepmode=\"backward\"),\n","                    dict(count=1, label=\"YTD\", step=\"year\", stepmode=\"todate\"),\n","                    dict(count=1, label=\"1a\", step=\"year\", stepmode=\"backward\"),\n","                    dict(step=\"all\"),\n","                ]\n","            )\n","        ),\n","        rangeslider=dict(visible=True),\n","        type=\"date\",\n","    )\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<h3 id=\"version\">Entrenar y predecir el modelo</h3>\n"],"metadata":{"id":"43Ga6XjFC-ks"}},{"cell_type":"markdown","source":["<p>\n","    Ahora que has visto en la gráfica de que datos partimos. Inicializamos el Prophet y lo entramos pasandole el dataframe\n","</p>\n","\n"],"metadata":{"id":"OrdwuatdC-kt"}},{"cell_type":"code","metadata":{"id":"NvGVBudz5s3-","executionInfo":{"status":"ok","timestamp":1687340541967,"user_tz":-120,"elapsed":628,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}}},"source":["#TAREA: Inicializa Prophet en la variable m con seasonality_mode en modo \"multiplicative\"\n","m = Prophet(seasonality_mode='multiplicative')"],"execution_count":17,"outputs":[]},{"cell_type":"code","source":["#TAREA: Entrena el modelo m con el dataframe de datos df\n","m.fit(df)"],"metadata":{"id":"0XVEpKXLhKTh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1687340576581,"user_tz":-120,"elapsed":2063,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}},"outputId":"71895768-36bd-4081-be26-bac11672f0aa"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmptnzxi6_b/5yvxdry0.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmptnzxi6_b/2_ukdkzw.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.10/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=61384', 'data', 'file=/tmp/tmptnzxi6_b/5yvxdry0.json', 'init=/tmp/tmptnzxi6_b/2_ukdkzw.json', 'output', 'file=/tmp/tmptnzxi6_b/prophet_model15s7zgcz/prophet_model-20230621094253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","09:42:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","09:42:54 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"execute_result","data":{"text/plain":["<prophet.forecaster.Prophet at 0x7f9e7fe47e20>"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["<p>\n","    Le decimos al modelo m los días en futuro que queremos predecir, en este caso el próximo año.\n","</p>\n","\n"],"metadata":{"id":"TJZXEaSkDOC9"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZLSmkanEfxK6","executionInfo":{"status":"ok","timestamp":1687340651494,"user_tz":-120,"elapsed":335,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}},"outputId":"ef7ae51b-a3ee-45e4-f3ac-b81123fa1079"},"source":["# TAREA: generar un dataframe con los días que tenemos y los 365 días siguientes a hoy para predecirlo\n","# PISTA: puedes usar la función del prophet make_future_dataframe()\n","future = m.make_future_dataframe(365) #preguntar cómo poner en meses, años\n","future.tail()"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             ds\n","3088 2024-06-15\n","3089 2024-06-16\n","3090 2024-06-17\n","3091 2024-06-18\n","3092 2024-06-19"],"text/html":["\n","  <div id=\"df-dd6b7b52-0728-4270-a84d-71564c7d841c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3088</th>\n","      <td>2024-06-15</td>\n","    </tr>\n","    <tr>\n","      <th>3089</th>\n","      <td>2024-06-16</td>\n","    </tr>\n","    <tr>\n","      <th>3090</th>\n","      <td>2024-06-17</td>\n","    </tr>\n","    <tr>\n","      <th>3091</th>\n","      <td>2024-06-18</td>\n","    </tr>\n","    <tr>\n","      <th>3092</th>\n","      <td>2024-06-19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd6b7b52-0728-4270-a84d-71564c7d841c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dd6b7b52-0728-4270-a84d-71564c7d841c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dd6b7b52-0728-4270-a84d-71564c7d841c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# En el caso que hayas elegido un valor o fondo tradicional, es decir, que no opere los fines\n","# de semana, descomenta la siguiente línea:\n","\n","# future = future[ future['ds'].dt.dayofweek < 5 ] # Nos elimina los fines de semana de 'ds' para no predecirlos, todo lo que no sea criptomoneda\n","future"],"metadata":{"id":"4XTsqYartl_f"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<p>\n","    Al modelo entrenado le pasamos el dataframe a predecir.\n","</p>\n","\n"],"metadata":{"id":"jB2FSrnHDxyj"}},{"cell_type":"code","source":["#Utiliza el modelo m para predecir el dataframe future\n","#sirve para predeccir a corto plaza\n","#\n","forecast = m.predict(future)"],"metadata":{"id":"3kAPSoh8ojz-","executionInfo":{"status":"ok","timestamp":1687340786191,"user_tz":-120,"elapsed":916,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"QUxvUHl5f0Zt","executionInfo":{"status":"ok","timestamp":1687340814917,"user_tz":-120,"elapsed":262,"user":{"displayName":"Helen HC","userId":"07705157954672346074"}},"outputId":"d320bae7-88fc-4473-835f-02ff023bd982"},"source":["forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             ds       yhat  yhat_lower  yhat_upper\n","3088 2024-06-15 $-2,209.34 $-15,883.46  $13,193.05\n","3089 2024-06-16 $-2,229.89 $-15,399.23  $13,214.28\n","3090 2024-06-17 $-2,248.88 $-15,213.82  $12,458.41\n","3091 2024-06-18 $-2,263.00 $-15,858.78  $12,624.35\n","3092 2024-06-19 $-2,268.47 $-15,849.78  $12,647.14"],"text/html":["\n","  <div id=\"df-5e65584d-00dc-4ffa-86b5-3b93329be967\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ds</th>\n","      <th>yhat</th>\n","      <th>yhat_lower</th>\n","      <th>yhat_upper</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3088</th>\n","      <td>2024-06-15</td>\n","      <td>$-2,209.34</td>\n","      <td>$-15,883.46</td>\n","      <td>$13,193.05</td>\n","    </tr>\n","    <tr>\n","      <th>3089</th>\n","      <td>2024-06-16</td>\n","      <td>$-2,229.89</td>\n","      <td>$-15,399.23</td>\n","      <td>$13,214.28</td>\n","    </tr>\n","    <tr>\n","      <th>3090</th>\n","      <td>2024-06-17</td>\n","      <td>$-2,248.88</td>\n","      <td>$-15,213.82</td>\n","      <td>$12,458.41</td>\n","    </tr>\n","    <tr>\n","      <th>3091</th>\n","      <td>2024-06-18</td>\n","      <td>$-2,263.00</td>\n","      <td>$-15,858.78</td>\n","      <td>$12,624.35</td>\n","    </tr>\n","    <tr>\n","      <th>3092</th>\n","      <td>2024-06-19</td>\n","      <td>$-2,268.47</td>\n","      <td>$-15,849.78</td>\n","      <td>$12,647.14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e65584d-00dc-4ffa-86b5-3b93329be967')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5e65584d-00dc-4ffa-86b5-3b93329be967 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5e65584d-00dc-4ffa-86b5-3b93329be967');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["<p>\n","    Gráfica con el modelo entrenado y los valores de un año en futuro predecidos.\n","</p>\n","\n"],"metadata":{"id":"Uo1nYT1DFUug"}},{"cell_type":"code","metadata":{"id":"APomV-ehh8tH"},"source":["next_day = (datetime.today() + timedelta(days=1)).strftime('%Y-%m-%d')\n","forecast[forecast['ds'] == next_day]['yhat'].item()\n","plot_plotly(m, forecast)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"achtj_i8f9lJ"},"source":["plot_components_plotly(m, forecast)"],"execution_count":null,"outputs":[]}]}